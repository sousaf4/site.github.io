<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://rdms.me">
  <title>rdms</title>
  <subtitle>Arquivos de meus estudos e pesquisas de matemática, computação, tecnologias, ficção, filmes e assim por diante</subtitle>
  <link href="https://rdms.me/feeds/codigo.xml" rel="self"/>
  <link href="https://rdms.me"/>
  <updated>2024-03-10T17:34:35Z</updated>
  <id>https://rdms.me</id>
  <author>
    <name>Rodolfo Maciel</name>
    <email>macielrdev@gmail.com</email>
  </author>
  <entry>
    <title>Programação Orientada a Objetos</title>
    <link href="https://rdms.me/s/i/programacao-orientada-a-objetos/"/>
    <updated>2024-03-10T17:34:35Z</updated>
    <id>https://rdms.me/s/i/programacao-orientada-a-objetos/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Os conceitos que falaremos a seguir são: Classes, Objetos, Mensagem, Métodos, Construtor, Encapsulamento, Abstração, Herança, Polimorfismo, Acoplamento, Coesão, Associação, Agregação, Composição, Módulo.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Classes&lt;/em&gt; - é um conjunto de atributos e métodos que são usados para projetar um tipo de dado abstrato. Eles reunem os dados e operações sobre os dados num único objeto.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Humano&lt;/span&gt;
  def initialize nome&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nasc
    @nome &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nome
    @nasc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nasc
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Uma classe é um modelo para a criação de objetos (uma estrutura de dados específica), fornecendo valores iniciais para o estado (variáveis ​​ou atributos de membro) e implementações de comportamento (funções ou métodos de membro).&lt;/p&gt;
&lt;p&gt;Cada classe pode ter um construtor e métodos para incrementar a lógica do seu funcionamento. O construtor é um método usado para criar um objeto e especifíca todos os valores necessários para sua criação. No caso do Ruby o construtor é a palavra-chave &lt;code&gt;initialize&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;em&gt;Objetos&lt;/em&gt; - é uma instância de uma classe. Ele tem identidade, estado e comportamento.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;joao &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Humano&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;João&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; #&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Humano&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0x00005644152a2f60&lt;/span&gt;
    @nasc&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;#&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Date&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;01&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;2415021j&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;0s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0n&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;0s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;2299161j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    @nome&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;João Pedro&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

joao&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__id__&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;260&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nesse exemplo vimos a criação do objeto joao com os atributos nome e nascimento que são o seu estado atual.&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;em&gt;Encapsulamento&lt;/em&gt; - agrupar atributos e métodos essenciais em um único objeto e protegê-los. Também pode referir-se à limitação do acesso direto a alguns desses dados, como os componentes de um objeto.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Humano&lt;/span&gt;
  def initialize nome&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nasc
    @nome &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nome
    @nasc &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nasc
  end

  def quem
    puts &lt;span class=&quot;token string&quot;&gt;&quot;Eu sou #{@nome} e nasci em #{@nasc}&quot;&lt;/span&gt;
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O encapsulamento envolve agrupar dentro de uma única entidade toda a informação e operações necessárias para seu funcionamento lógico e expor apenas o necessário a outros objetos.&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;em&gt;Abstração&lt;/em&gt; - Fornecer ao &#39;mundo&#39; exterior apenas as funcionalidades do objeto sem precisar revelar a implementação.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Quadrado&lt;/span&gt;
  def initialize lado
    @lado &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; lado
  end

  def area
    lado &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; lado
  end
end

forma &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Quadrado&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

forma&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;area&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;25&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;É como um restaurante onde você pede um prato específico mas não sabe como ele é feito, apenas recebe o pedido e pode degustar.&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;&lt;em&gt;Herança&lt;/em&gt; - a capacidade de uma classe derivar os atributos e métodos de outra classe.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Human&lt;/span&gt;
  def initialize name
    @name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name
  end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Man&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; Human
  def initialize name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; burn
    &lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    @burn &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; burn
  end
end

john &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Man&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;John Doe&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;&lt;em&gt;Polimorfirmos&lt;/em&gt; - várias classes podem ter mesmo nome de método com comportamentos diferentes. Uma mensagem pode ser exibida em mais de uma forma.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Por meio de herança e interface. Também substituição de método&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Forma&lt;/span&gt;
  def area
    raise NotImplementedError&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Método Não Implementado&quot;&lt;/span&gt;
  end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Retangulo&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; Forma
    def &lt;span class=&quot;token function&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; width&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        @length &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; length
        @width &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; width
    end
    def area
      @length &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; @width
    end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Circulo&lt;/span&gt;  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; Forma
    def &lt;span class=&quot;token function&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;radius&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        @radius &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; radius
    end
    def area
        &lt;span class=&quot;token literal-property property&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; @radius&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
    end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nesse caso a classe Retangulo e Circulo tem o mesmo método &lt;code&gt;area&lt;/code&gt; mas são implementados de forma diferentes.&lt;/p&gt;
&lt;p&gt;Sobrecarga de método&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;def &lt;span class=&quot;token function&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
  args&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;each &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;arg&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
    total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; total &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; arg
  end
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; total
end

&lt;span class=&quot;token function&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// =&gt; 6&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// =&gt; 30&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;&lt;em&gt;Mensagem&lt;/em&gt; - É quando um objeto faz a solicitação de execução de um método de outro objeto.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Calc&lt;/span&gt;
  def &lt;span class=&quot;token function&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;

    args&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;each &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;arg&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
      total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; total &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; arg
    end
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; total
  end
  def &lt;span class=&quot;token function&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

    args&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;each &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;arg&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;
      total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; total &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; arg
    end
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; total
  end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Results&lt;/span&gt;
  def initialize operator
    @op &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; operator
    @res &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  end

  def &lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;op&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;values&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; @op&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;op&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;values&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    @res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;total&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A classe &lt;code&gt;Results&lt;/code&gt; recebe o objeto da classe &lt;code&gt;Calc&lt;/code&gt; e envia mensagens para ele usando o método &lt;code&gt;call&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;&lt;em&gt;Acoplamento&lt;/em&gt; - é o grau de dependência entre duas classes e o quanto ela pode ser usada isoladamente. As alterações de uma classe pode gerar alterações também em outras.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ShoppingCart&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;items
  def initialize
    @items &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  end
end
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Order&lt;/span&gt;
  def &lt;span class=&quot;token function&quot;&gt;process_order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cart&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    cart&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;price&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nessa implementação as classes &lt;code&gt;Order&lt;/code&gt; e &lt;code&gt;Shopping&lt;/code&gt; estão muito acoplados e sabem muito uma sobre a outra&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ShoppingCart&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;items
  def initialize
    @items &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  end
  def calculate_total
    items&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;price&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Order&lt;/span&gt;
  def &lt;span class=&quot;token function&quot;&gt;process_order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cart&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    cart&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;calculate_total
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neste segundo exemplo o acoplamento está baixo o que é o ideal. A classe Order só sabe que deve enviar uma mensagem para &lt;code&gt;cart&lt;/code&gt; obtendo o preço total dos itens.&lt;/p&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;&lt;em&gt;Coesão&lt;/em&gt; - é a proximidade que os atributos e métodos dentro de uma classe. Objetivo ideal: alta coesão.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Library&lt;/span&gt;
  def loan
    puts &lt;span class=&quot;token string&quot;&gt;&quot;code here loan&quot;&lt;/span&gt;
  end

  def book
    puts &lt;span class=&quot;token string&quot;&gt;&quot;code here book&quot;&lt;/span&gt;
  end

  def make_coffee
    puts &lt;span class=&quot;token string&quot;&gt;&quot;should not be here&quot;&lt;/span&gt;
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O método &lt;code&gt;make_coffee&lt;/code&gt; não está coeso ou alinhado como o objetivo da classe &lt;code&gt;Library&lt;/code&gt;. Ou seja a coesão está baixa.&lt;/p&gt;
&lt;ol start=&quot;10&quot;&gt;
&lt;li&gt;&lt;em&gt;Associação&lt;/em&gt; - é a conexão entre duas classes que pode se dar um-para-um, um-para-muitos, muitos-para-um, muitos-para-muitos. Exemplo: um médico e seus pacientes que podem existir independentes um do outro mas tem uma associação entre eles.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Um para muitos&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;

  &lt;span class=&quot;token literal-property property&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;cars

  def initialize
    @cars &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  end

  def &lt;span class=&quot;token function&quot;&gt;add_car&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;car&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    # saving each car object &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; an array
    @cars &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; car
    # saving the current person object refered to &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; self
    # to the car objects person variable
    car&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;person &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self
  end

end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Car&lt;/span&gt;

  &lt;span class=&quot;token literal-property property&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;person

end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Muitos para muitos.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Restaurant&lt;/span&gt;

  def best_patron
    # finding all meals &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; restaurant object
    restaurant &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Meal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;meal&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; meal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;restaurant &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    # creating array &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; all customers on &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; restaurant object
    restaurant_customers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restaurant&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;map &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;meal&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; meal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;customer&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    # creating hash where the customer keys value is number &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; meals &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; restaurant
    freq_count &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restaurant_customers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;Hash&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;customer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; freq&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; customer&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;freq&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; customer &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    # returns customer &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; most meals &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; restaurant
    freq_count&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;max_by &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;freq_count&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;values&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  end

end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Meal&lt;/span&gt;

  &lt;span class=&quot;token literal-property property&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;customer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;restaurant

  @@all &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

  def &lt;span class=&quot;token function&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;customer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; restaurant&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    @restaurant &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restaurant
    @customer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; customer
    @@all &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; self
  end

  def self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all
    @@all
  end

end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Customer&lt;/span&gt;

  def favorite_restaurant
    # finding all meals &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; customer object
    customer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Meal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;all&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;meal&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; meal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;customer &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    # creating array &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; all restaurants on &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; customer object
    customers_restaurants &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; customer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;map &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;meal&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; meal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;restaurant&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    # creating hash where the restaurants keys value is number &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; meals &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; customer
    freq_count &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; customers_restaurants&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;Hash&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;restaurant&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; freq&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; restaurant&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;freq&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; restaurant &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    # returns restaurant &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; most meals &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; customer
    freq_count&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;max_by &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;freq_count&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;values&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  end

end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neste caso a classe Meal está juntado todas as referencias de Restaurant e Customer.&lt;/p&gt;
&lt;ol start=&quot;11&quot;&gt;
&lt;li&gt;&lt;em&gt;Agregação&lt;/em&gt; - um objeto faz parte de um todo mas pode existir separado. É uma forma especial de associação. Se o objeto pai deixa de existir o objeto filho não deixa. Exemplo: departamento e funcionário. O departamento pode possuir o funcionário mas o contrário não é verdade.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Car&lt;/span&gt;
    @engine &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; engine
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Engine&lt;/span&gt;
  def start
    p &lt;span class=&quot;token string&quot;&gt;&quot;vrum vrum&quot;&lt;/span&gt;
  end
  def stop
    p &lt;span class=&quot;token string&quot;&gt;&quot;irirhii riihiri&quot;&lt;/span&gt;
  end
end

e &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Engine&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;new
&lt;span class=&quot;token class-name&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Car&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neste exemplo vemos que um objeto Engine foi criado e passado para o objeto Car na sua inicialização. Neste caso mesmo que o objeto Car seja destruído o objeto Engine ainda vai existir.&lt;/p&gt;
&lt;ol start=&quot;12&quot;&gt;
&lt;li&gt;&lt;em&gt;Composição&lt;/em&gt; - um objeto faz parte de um todo e não pode existir separado. É uma forma especial da agregação. Se o objeto pai deixa de existir os objetos filhos também vão.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Poop&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Bark&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Clean&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Man&lt;/span&gt;
  def &lt;span class=&quot;token function&quot;&gt;poop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    eat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Poop&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  end

  def &lt;span class=&quot;token function&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    clean &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Clean&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Dog&lt;/span&gt;
  def &lt;span class=&quot;token function&quot;&gt;bark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    bark &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Bark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;bark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As classes &lt;code&gt;Poop&lt;/code&gt;, &lt;code&gt;Bark&lt;/code&gt; e &lt;code&gt;Clean&lt;/code&gt; estão sendo usadas para compor as classes &lt;code&gt;Man&lt;/code&gt; e &lt;code&gt;Dog&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&quot;13&quot;&gt;
&lt;li&gt;&lt;em&gt;Módulo&lt;/em&gt; - divisão de um sistema em muitos componentes funcionais.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module Actions
  def walk
   puts &lt;span class=&quot;token string&quot;&gt;&quot;Walking&quot;&lt;/span&gt;
  end

  def speak
   puts &lt;span class=&quot;token string&quot;&gt;&quot;Speaking&quot;&lt;/span&gt;
  end

  def sleep
   puts &lt;span class=&quot;token string&quot;&gt;&quot;Sleeping&quot;&lt;/span&gt;
  end

  def eat
   puts &lt;span class=&quot;token string&quot;&gt;&quot;Eating&quot;&lt;/span&gt;
  end
end

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Human&lt;/span&gt;
  include Actions

  def initialize name
    @name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name
  end
end

h &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Human&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Júlio César&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

h&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;speak
&lt;span class=&quot;token comment&quot;&gt;// =&gt; Speaking&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Solucao Level 8 - Tutorial World</title>
    <link href="https://rdms.me/s/n/solucao-level-8-tutorial-world/"/>
    <updated>2024-02-06T14:53:07Z</updated>
    <id>https://rdms.me/s/n/solucao-level-8-tutorial-world/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Essa é a solução lógica para o desafio 8 do Tutorial World do Natural Number Game &lt;code&gt;2+2=4&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nth_rewrite &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;two_eq_succ_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; only change the second `&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;` to `succ &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;`&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;add_succ&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;one_eq_succ_zero&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;add_succ&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; add_zero&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; two rewrites at once
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;← three_eq_succ_two&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; change `succ &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;` to `&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;`
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;← four_eq_succ_three&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rfl&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A solução que eu encontrei para o mesmo desafio com 12 passos.&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;nth_rewrite &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;two_eq_succ_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;four_eq_succ_three&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;add_succ&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;two_eq_succ_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;three_eq_succ_two&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;two_eq_succ_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;succ_eq_add_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;succ_eq_add_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;succ_eq_add_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rw &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;succ_eq_add_one&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rfl&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Introdução ao SSH</title>
    <link href="https://rdms.me/s/n/introducao-ao-ssh/"/>
    <updated>2024-01-20T18:03:43Z</updated>
    <id>https://rdms.me/s/n/introducao-ao-ssh/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Acessando um servidor remoto com ssh&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;ssh&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;urlserver&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;ssh&lt;/span&gt; james@142.93.58.60
&lt;span class=&quot;token function&quot;&gt;ssh&lt;/span&gt; james@server.sitename.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Locais onde se encontram as chaves ssh e como criar uma nova&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; .ssh

ssh-keygen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copiando chave para um servidor&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ssh-copy-id root@server.sitename.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enviando arquivos para o servidor após estabelecer conexão&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;rsync&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;@&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;urlserver&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;:&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Servidores de Chaves Públicas GPG</title>
    <link href="https://rdms.me/s/n/servidores-de-chaves-publicas-gpg/"/>
    <updated>2024-01-19T22:13:07Z</updated>
    <id>https://rdms.me/s/n/servidores-de-chaves-publicas-gpg/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Segue abaixo alguns endereços que você pode usar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://keybase.io/&quot;&gt;https://keybase.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://keys.openpgp.org/&quot;&gt;https://keys.openpgp.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://keyserver.ubuntu.com/&quot;&gt;https://keyserver.ubuntu.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://keys.gnupg.net/&quot;&gt;http://keys.gnupg.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pgp.mit.edu/&quot;&gt;https://pgp.mit.edu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://keyoxide.org/&quot;&gt;https://keyoxide.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para solicitar ou enviar/receber uma chave ao servidor use os comandos a seguir:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gpg &lt;span class=&quot;token parameter variable&quot;&gt;--keyserver&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;url-server&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; --recv-key &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;email&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

gpg &lt;span class=&quot;token parameter variable&quot;&gt;--keyserver&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;url-server&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; --send-key &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;email&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Comandos Básicos do GPG</title>
    <link href="https://rdms.me/s/i/comandos-basicos-do-gpg/"/>
    <updated>2024-01-18T12:06:59Z</updated>
    <id>https://rdms.me/s/i/comandos-basicos-do-gpg/</id>
    <content xml:lang="pt-BR" type="html">&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# listar as chaves geradas&lt;/span&gt;
gpg --list-keys

&lt;span class=&quot;token comment&quot;&gt;# listar por padrão&lt;/span&gt;
gpg --list-keys &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;pattern&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# exportar a chave publica&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;--export&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;key|email&gt;&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; pubkey.gpg

&lt;span class=&quot;token comment&quot;&gt;# importar chave de um arquivo&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;--import&lt;/span&gt; pubkey.gpg

&lt;span class=&quot;token comment&quot;&gt;# encriptar arquivo com chave publica&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;--encrypted&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--recipient&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;key&gt;&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;key&gt;&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# assinatura nao-anexada. vai gerar&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# um arquivo .sig com o mesmo nome do original&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# verificar a assinatura. É preciso ter a chave&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# publica da assinatura&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;--verify&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;signature_file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# descriptografar para a saida padrao&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# descriptografar para um arquivo&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-d&lt;/span&gt; mensagem.txt.gpg &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; mensagem.txt

&lt;span class=&quot;token comment&quot;&gt;# encriptar usando uma senha&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# descriptografar usando uma senha&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;file_path&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;-d&lt;/span&gt; mensagem.txt.gpg &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; mensagem.txt

&lt;span class=&quot;token comment&quot;&gt;# enviar e receber chaves de um servidor&lt;/span&gt;
gpg &lt;span class=&quot;token parameter variable&quot;&gt;--keyserver&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;url-server&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; --recv-key &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;email&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

gpg &lt;span class=&quot;token parameter variable&quot;&gt;--keyserver&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;url-server&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; --send-key &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;email&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>GPG - Criptgografia de Arquivos e Emails</title>
    <link href="https://rdms.me/s/n/gpg-criptgografia-de-arquivos-e-emails/"/>
    <updated>2024-01-16T23:33:17Z</updated>
    <id>https://rdms.me/s/n/gpg-criptgografia-de-arquivos-e-emails/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Comandos básicos para criar e exportar um par de chaves criptográficas no PGP.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;gpg &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;full&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;generate&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;key

gpg &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;idkey&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;publicnamekey&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;key

gpg &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;secret&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;key &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;idkey&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;privatenamekey&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;key&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Introdução ao Common Lisp</title>
    <link href="https://rdms.me/s/i/introducao-ao-common-lisp/"/>
    <updated>2024-01-16T19:26:17Z</updated>
    <id>https://rdms.me/s/i/introducao-ao-common-lisp/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Subtrai 1 do número dado.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sub1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;-&lt;/span&gt; n &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Subtrai 2 do número dado e utilizando a função &lt;code&gt;sub1&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sub2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;sub1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;sub1&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Soma 1 ao número dado.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;+&lt;/span&gt; n &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Soma 2 ao número dado. Faz uso da função &lt;code&gt;add1&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;add1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;add1&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essa função é conhecida como predicado pois verifica se a entrada é igual a 2.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;twop2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;zerop&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;sub2&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essa função verifica se dois números são diferentes.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;not-equal&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;token argument variable&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;equal&lt;/span&gt; n m&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essa função adiciona 1 ao segundo numero dado e compara se os dois são iguais.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onemorep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;token argument variable&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;equal&lt;/span&gt; n &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;add1&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Função retorna a metade do número.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;half&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;/&lt;/span&gt; n &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Função divide o valor por 2.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;div2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;/&lt;/span&gt; n &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outra forma de retornar a metade do valor.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;half2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;div2&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essa função verifica se o numero tem dois digitos ou mais.&lt;/p&gt;
&lt;pre class=&quot;language-sbcl&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sbcl&quot;&gt;(defun multi-digit-p (n)
  (or
    (&gt; n 9)
    (&lt; n -9)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Função média.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;average&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token rest-vars&quot;&gt;&lt;span class=&quot;token lisp-marker&quot;&gt;&amp;amp;rest&lt;/span&gt; &lt;span class=&quot;token argument variable&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;token quoted-symbol variable symbol&quot;&gt;#&#39;+&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;length&lt;/span&gt; m&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verifica se o número é igual a 1.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;equal&lt;/span&gt; n &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verifica se o número é diferente de 1.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;not-onep&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;onep&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verifica se o número é maior que 0.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;plusp&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;&gt;&lt;/span&gt; n &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verifica se o número é menor que 0.&lt;/p&gt;
&lt;pre class=&quot;language-lisp&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-lisp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token defun&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defun&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;not-plusp&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token arguments&quot;&gt;&lt;span class=&quot;token argument variable&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token car&quot;&gt;plusp&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Marcações HTML para utilizar nos Artigos do Site</title>
    <link href="https://rdms.me/s/i/marcacoes-html-para-utilizar-nos-artigos-do-site/"/>
    <updated>2024-01-12T20:02:05Z</updated>
    <id>https://rdms.me/s/i/marcacoes-html-para-utilizar-nos-artigos-do-site/</id>
    <content xml:lang="pt-BR" type="html">&lt;p&gt;Usando o iframe odysee:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;iframe u-video&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;odysee-iframe&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;560&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;315&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://odysee.com/$/embed/@alvarohenrique:7/walter-burle-marx-walterburlemarx:4?r=G5jHQ6pyV3rLtNWLatmWng2f3HGoXzWV&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token attr-name&quot;&gt;allowfullscreen&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usando o &lt;a href=&quot;https://github.com/luwes/playerx&quot;&gt;playerx&lt;/a&gt; para qualquer tipo de video&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;player-x&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://www.youtube.com/watch?v=dzKJ_1i78Y8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;player-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usando &lt;a href=&quot;https://github.com/luwes/lite-vimeo-embed?tab=readme-ov-file&quot;&gt;lite-youtube&lt;/a&gt; para videos do Youtube:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;lite-youtube&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;u-video&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;videoid&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;rkZzg7Vowao&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;lite-youtube&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outra opção para os videos do Youtube explicado pelo &lt;a href=&quot;https://www.labnol.org/internet/light-youtube-embeds/27941/&quot;&gt;Labnol&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;youtube-player&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Kqi_6v2RGB0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usando &lt;a href=&quot;https://github.com/luwes/lite-vimeo-embed&quot;&gt;lite-vimeo&lt;/a&gt; para videos do Vimeo&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;lite-vimeo&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;videoid&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;357274789&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;lite-vimeo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
</feed>